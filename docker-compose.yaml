version: '3.7'

services:
  db:
    image: postgres:11.4-alpine
    restart: always
    container_name: "bank_db"
    ports:
      - ${POSTGRES_PORT}:${INTERN_POSTGRES_PORT}
    volumes:
      - db_volume:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

  adminer:
    image: adminer
    container_name: "bank_adminer"
    restart: always
    ports:
      - ${ADMINER_PORT}:${INTERN_ADMINER_PORT}
    volumes:
      - adminer_volume
      
  api:
    image: node:10.16.0-alpine
    working_dir: /usr/src/app
    restart: always
    container_name: "bank_api"
    volumes:
      - api_volume:/usr/src/app
      # - ${PWD}/api/package.json:/usr/src/app/package.json
      # - ${PWD}/api/package-lock.json:/usr/src/app/package-lock.json
      - ${PWD}/api/node_modules:/usr/src/app/node_modules
    ports:
      - ${API_PORT}:${INTERN_API_PORT}
    command: sh -c  "apk add --no-cache bash && ./wait-for-it.sh db:${INTERN_POSTGRES_PORT} && npm install && npm run dev"
    depends_on:
      - db
    environment:
      NODE_ENV: ${NODE_ENV}
      PGUSER: ${POSTGRES_USER}
      PGHOST: ${POSTGRES_HOST}
      PGPORT: ${INTERN_POSTGRES_PORT}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB}
      PORT: ${INTERN_API_PORT}


volumes:
  api_volume:
    driver_opts:
      type: none
      device: ${PWD}/api
      o: bind
  db_volume:
  adminer_volume:
